//
//  AddContactPresenter.swift
//  Clean-swift-article
//
//  Created by Anton Marunko on 30/05/2018.
//  Copyright (c) 2018 exyte. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol AddContactPresentationLogic {
    func presentContact(response: AddContact.ShowContact.Response)
    func presentMissingFileds(response: AddContact.ShowMissingFields.Response)
    func presentSave(response: AddContact.Save.Response)
}

final class AddContactPresenter: AddContactPresentationLogic {
    weak var viewController: AddContactDisplayLogic?

    // MARK: - AddContactsPresentationLogic

    func presentContact(response: AddContact.ShowContact.Response) {

        let firstName = response.contact.firstName.uppercaseFirst
        let lastname = response.contact.lastName.uppercaseFirst

        let phone = PhoneFormatter.format(sourcePhoneNumber: response.contact.phone) ?? response.contact.phone
        let address = response.contact.address

        let viewModel = AddContact.ShowContact.ViewModel(
            firstName: firstName,
            lastName: lastname,
            address: address,
            phone: phone)

        viewController?.displayContact(viewModel: viewModel)
    }

    func presentMissingFileds(response: AddContact.ShowMissingFields.Response) {
        let viewModel = AddContact.ShowMissingFields.ViewModel(text: response.text)
        viewController?.displayMissingFields(viewModel: viewModel)
    }

    func presentSave(response: AddContact.Save.Response) {
        let viewModel = AddContact.Save.ViewModel()
        viewController?.displaySavedContact(viewModel: viewModel)
    }
}
